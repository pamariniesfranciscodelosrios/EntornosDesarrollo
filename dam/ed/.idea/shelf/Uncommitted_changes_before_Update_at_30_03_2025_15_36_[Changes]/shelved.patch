Index: src/main/java/dam/ed/Calculadora.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dam/ed/Calculadora.java b/src/main/java/dam/ed/Calculadora.java
new file mode 100644
--- /dev/null	(date 1743264515990)
+++ b/src/main/java/dam/ed/Calculadora.java	(date 1743264515990)
@@ -0,0 +1,28 @@
+package dam.ed;
+
+public class Calculadora {
+
+    double suma(double a, double b) {
+        return a + b;
+    }
+
+    double resta(double minuendo, double sustraendo) {
+        return minuendo - sustraendo;
+    }
+
+    double multiplica(double a, double b) {
+        //original return Math.abs(a * b);
+        return (a*b);
+    }
+
+    double divide(double dividendo, double divisor) throws Exception {
+        if (divisor == 0) {
+            throw new Exception("El divisor es 0");
+        }
+        return dividendo / divisor;
+    }
+
+    double potencia(double base, double exponente) {
+        return Math.pow(base, exponente);
+    }
+}
\ No newline at end of file
Index: src/test/java/dam/ed/CalculadoraTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/dam/ed/CalculadoraTest.java b/src/test/java/dam/ed/CalculadoraTest.java
new file mode 100644
--- /dev/null	(date 1743264472816)
+++ b/src/test/java/dam/ed/CalculadoraTest.java	(date 1743264472816)
@@ -0,0 +1,56 @@
+package dam.ed;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+import org.junit.jupiter.api.BeforeAll;
+import org.junit.jupiter.api.DisplayName;
+import org.junit.jupiter.api.Test;
+
+class CalculadoraTest {
+
+    // Definimos el objeto para usarlo en todos los tests
+    static Calculadora miCalculadora;
+
+    @BeforeAll
+    public static void setUpClass(){
+        miCalculadora = new Calculadora();
+    }
+
+    @Test
+    @DisplayName("Multiplica dos números")
+    void testMultiplicar() {
+        assertEquals(6, miCalculadora.multiplica(2,3));
+        assertEquals(0, miCalculadora.multiplica(5,0));
+        assertEquals(16, miCalculadora.multiplica(4,4));
+        assertEquals(-5, miCalculadora.multiplica(-5, 1));
+    }
+
+    @Test
+    @DisplayName("Divisiones enteras y reales")
+    void testDivisionesEnterasYReales() throws Exception {
+        assertEquals(2, miCalculadora.divide(4,2));
+        assertEquals(2.5, miCalculadora.divide(10,4));
+        assertEquals(4, miCalculadora.divide(10,2.5));
+        assertEquals(3.2, miCalculadora.divide(8,2.5));
+        assertEquals(0.5, miCalculadora.divide(2,4));
+    }
+
+    @Test
+    @DisplayName("Divisiones positivos y negativos")
+    void testDivisionesPositivosYNegativos() throws Exception {
+        assertTrue(miCalculadora.divide(4,2) > 0);
+        assertTrue(miCalculadora.divide(4,-2)< 0);
+        assertTrue(miCalculadora.divide(-4,2) < 0);
+        assertTrue(miCalculadora.divide(-4,-2) > 0);
+    }
+
+    @Test
+    @DisplayName("División por cero causa excepción")
+    void testDivisionPorCero() {
+        Exception thrown = assertThrows(Exception.class, () -> {
+            miCalculadora.divide(5,0);
+        });
+
+        assertEquals("El divisor es 0", thrown.getMessage());
+    }
+}
\ No newline at end of file
Index: src/test/java/dam/ed/CalculadoraTestDos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/dam/ed/CalculadoraTestDos.java b/src/test/java/dam/ed/CalculadoraTestDos.java
new file mode 100644
--- /dev/null	(date 1743263746990)
+++ b/src/test/java/dam/ed/CalculadoraTestDos.java	(date 1743263746990)
@@ -0,0 +1,7 @@
+package dam.ed;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+class CalculadoraTestDos {
+
+}
\ No newline at end of file
